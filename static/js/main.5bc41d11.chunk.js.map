{"version":3,"sources":["media/img/rl_avatar.svg","helpers/initModels/initGameState.js","helpers/initModels/initPlayerStats.js","helpers/initModels/initRoom.js","helpers/dictionaries/beastDictionary.js","helpers/utilityLambdas/toCoords.js","helpers/utilityLambdas/rollDie.js","helpers/reducers/gameStateReducer.js","components/containers/Console/PrintBtn/index.js","helpers/initModels/elements.js","helpers/utilityLambdas/generateNewBeast.js","components/containers/Console/Beasterator/index.js","components/containers/Console/Roller/index.js","components/containers/Console/Locationator/index.js","components/containers/Console/index.js","components/atoms/PlayerAvatar/index.js","components/molecules/PlayerStats/index.js","components/containers/PlayerDisplay/index.js","components/atoms/Loading/index.js","components/molecules/Log/index.js","components/containers/HUD/index.js","helpers/dictionaries/itemDictionary.js","components/molecules/InventoryControls/index.js","components/molecules/PlayerBattleControls/index.js","components/containers/ControlsPanel/index.js","components/containers/ActionHUD/index.js","components/molecules/Beast/index.js","components/molecules/Room/index.js","components/containers/ActionDisplay/index.js","components/containers/GameDisplay/index.js","components/containers/Game/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initGameState","player","levelCoords","roomId","roomCoords","x","y","inventory","type","baseTitle","isEquipped","damage","key","proximity","equippedBy","range","rangeMod","description","baseStats","strength","agility","constitution","perception","wisdom","intelligence","savingThrow","vitalStats","hp","sp","xp","corruption","statMod","mod","log","messages","ctx","value","location","level","rooms","id","dimensionality","tiles","carvingRules","wall","hasDoor","isDoorLocked","wallAxisCoord","tunnelType","canFork","wallType","beastGenerationRules","isSeen","nearbyBeasts","beastDictionary","scarcity","healthDie","armorDie","savingThrowDie","elementalScarcity","imgSrc","dyingMessage","toCoords","index","Math","floor","rollDie","die","hazMod","indexOf","n","Number","split","d","reducedVal","Array","from","length","_","ceil","random","reduce","acc","curr","GameStateContext","createContext","useGameState","useContext","Error","gameStateReducer","gameState","action","filteredRest","obj","filterKey","Object","fromEntries","keys","filter","test","map","gameRestFromLocation","handleTargetBeast","beast","targetBeast","locationRest","gameRest","addLog","updatedBeast","assign","isTargeted","targetState","b","concat","msgs","isArray","forEach","msg","JSON","stringify","logRest","console","loc","room","roomIndex","openTiles","tile","i","t","coords","beastOnTile","tileCoords","dir","dX","dY","toIndex","playerRest","targetActor","beastTarget","weapon","item","amtFromAttack","rollMsg","vitalStatsRest","amt","focusMode","itmAction","target","verb","doesRemove","GameStateProvider","props","useReducer","dispatchGameState","useMemo","Provider","PrintBtn","onClick","elements","fire","healthMod","water","nether","generateNewBeast","allowedBeasts","lvl","lvlMod","beastType","beastRef","floorDCChecks","elem","hasOwnProperty","Beasterator","useState","setBeast","selectedBeastList","setBeastList","getNewBeast","handlePushBeast","newBeast","beastCheckboxes","updatedList","s","handleToggleCheckbox","className","standardDice","Roller","dieAmt","setDieAmt","setDie","setMod","rollVal","setRollVal","diceBtns","btnDie","handleDieSelect","rollString","onChange","rollResult","Locationator","isInBattle","Console","isActive","PlayerAvatar","src","avatar","alt","PlayerStats","playerStats","PlayerDisplay","Loading","Log","ctxFocus","setCtxFocus","activeViewIndex","setActiveViewIndex","displayTypes","filteredMessages","adjustViewIndex","endIndex","begIndex","logMessages","slice","m","filterButtons","handleFilterClick","HUD","canDrop","itemDictionary","allowedActions","potion","InventoryControls","focusItem","setFocusItem","isInIventory","a","PlayerBattleControls","targetedBeast","attack","ControlsPanel","targetedBeasts","ActionHUD","roomStats","roomHUD","roomHUDTip","BeastHealthBar","currHealth","maxHealth","barStyle","width","style","Room","useEffect","window","addEventListener","e","isComposing","keyCode","arrowHandlerKeyCodes","handleArrowPress","handleToggleInventory","handleToggleConsole","kCode","dirFromCode","forceClose","gridAreaStyle","gridColumn","gridRow","handleClickTile","replace","toLowerCase","gridStyle","gridTemplateColumns","gridTemplateRows","ActionDisplay","roomData","r","GameDisplay","withPanel","Game","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kHAAAA,EAAOC,QAAU,IAA0B,uC,ydCkB5BC,EAfO,CAClBC,OCJsB,CACtBC,YAAa,CACTC,OAAQ,GAEZC,WAAY,CACRC,EAAG,EACHC,EAAG,GAEPC,UAAW,CAAC,CACRC,KAAM,SACNC,UAAW,QACXC,YAAY,EACZC,OAAQ,MACRC,IAAK,KACLC,UAAW,CACP,QACA,UAEJC,WAAY,OACZC,MAAO,OACPC,SAAU,MACVC,YAAa,gGAEjB,CACIT,KAAM,SACNI,IAAK,KACLH,UAAW,uBACXI,UAAW,SACXG,SAAU,MACVF,WAAY,OACZG,YAAa,4DAEjBC,UAAW,CAEPC,SAAU,EACVC,QAAS,EACTC,aAAc,EACdC,WAAY,EACZC,OAAQ,EACRC,aAAc,EACdC,YAAa,OAEjBC,WAAY,CAERC,GAAI,GACJC,GAAI,EACJC,GAAI,GAERC,WAAY,CACR,CACItB,KAAM,GACNS,YAAa,GACbc,QAAS,aACTC,KAAM,KDhDdC,IAAK,CACDC,SAAU,CAAC,CACPC,IAAK,UACLC,MAAO,mBAGfC,SAAU,CACNC,MAAO,EACPC,MEbS,CAAC,CACdC,GAAI,EACJhC,KAAM,OACNiC,eAAgB,GAChBC,MAAO,CAAC,CACJlC,KAAM,QACP,CACCA,KAAM,UACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QAIV,CACIA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QAIV,CACIA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QAIV,CACIA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QAIV,CACIA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QAIV,CACIA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QAIV,CACIA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QAIV,CACIA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QAIV,CACIA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QACP,CACCA,KAAM,QAIV,CA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","file":"static/js/main.5bc41d11.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rl_avatar.a75d3f2a.svg\";","import initPlayerStats from './initPlayerStats';\r\nimport initRoom from './initRoom';\r\n\r\nconst initGameState = {\r\n    player: initPlayerStats,\r\n    log: {\r\n        messages: [{\r\n            ctx: 'general',\r\n            value: 'Started game.'\r\n        }]\r\n    },\r\n    location: {\r\n        level: 1,\r\n        rooms: initRoom,\r\n        nearbyBeasts: [] //beasts placed within available space in room on generation, or on add to nearbyBeasts (AKA beast entering the room)\r\n    }\r\n};\r\n\r\nexport default initGameState;","const samplePlayerStats = {\r\n    levelCoords: {\r\n        roomId: 0 //\r\n    },\r\n    roomCoords: {\r\n        x: 1,\r\n        y: 2\r\n    },\r\n    inventory: [{\r\n        type: 'weapon',\r\n        baseTitle: 'Spear',\r\n        isEquipped: true,\r\n        damage: '1d4',\r\n        key: 1001, //arbitrary - improve\r\n        proximity: [\r\n            'melee',\r\n            'ranged'\r\n        ],\r\n        equippedBy: 'hand',\r\n        range: '20ft',\r\n        rangeMod: '1d4',\r\n        description: 'Old and scraggly, you picked this up from your dead father\\'s corpse. He didn\\'t seem to mind.'\r\n    },\r\n    {\r\n        type: 'potion',\r\n        key: 1002, //arbitrary - improve\r\n        baseTitle: 'Absolve Corruption I',\r\n        proximity: 'ranged',\r\n        rangeMod: '1d4',\r\n        equippedBy: 'hand',\r\n        description: 'Smells a bit like old cheese mixed with your gym socks.'\r\n    }],\r\n    baseStats: {\r\n        //modify only with atypical events\r\n        strength: 1,\r\n        agility: 1,\r\n        constitution: 1,\r\n        perception: 1,\r\n        wisdom: 1,\r\n        intelligence: 1,\r\n        savingThrow: '1d8'\r\n    },\r\n    vitalStats: {\r\n        //modify with typical events\r\n        hp: 10,\r\n        sp: 0,\r\n        xp: 0\r\n    },\r\n    corruption: [\r\n        {\r\n            type: '',\r\n            description: '',\r\n            statMod: 'perception',\r\n            mod: -1\r\n        }\r\n    ]\r\n};\r\n\r\nexport default samplePlayerStats;","const initRoom = [{ //array of room objects, generated each level change\r\n    id: 0,\r\n    type: 'none',\r\n    dimensionality: 12, //square configuration for all rooms\r\n    tiles: [{\r\n        type: 'wall'\r\n    }, {\r\n        type: 'portal'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    },\r\n    \r\n    //2nd row\r\n    {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'wall'\r\n    },\r\n    \r\n    //3rd row\r\n    {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'wall'\r\n    },\r\n    \r\n    //4th row\r\n    {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'wall'\r\n    },\r\n    \r\n    //5th row\r\n    {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'wall'\r\n    },\r\n    \r\n    //6th row\r\n    {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'wall'\r\n    },\r\n    \r\n    //7th row\r\n    {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'wall'\r\n    },\r\n    \r\n    //8th row\r\n    {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'wall'\r\n    },\r\n    \r\n    //9th row\r\n    {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'wall'\r\n    },\r\n    \r\n    //10th row\r\n    {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'wall'\r\n    },\r\n    \r\n    //11th row\r\n    {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'none'\r\n    }, {\r\n        type: 'wall'\r\n    },\r\n    \r\n    //12th row\r\n    {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }, {\r\n        type: 'wall'\r\n    }],\r\n    carvingRules: [{\r\n        type: 'portal', //(portal|tunnel|wall)\r\n        wall: 'top', //box model terms (top|right|bottom|left)\r\n        hasDoor: false,\r\n        isDoorLocked: false, //default - determined randomly for early levels and by rules for higher levels; irrelevant for !hasDoor\r\n        wallAxisCoord: 1\r\n    }, {\r\n        type: 'portal',\r\n        wall: 'right',\r\n        hasDoor: false,\r\n        wallAxisCoord: 4 //range determined by gameState.location.map[thisRoomIndex].size\r\n    }, {\r\n        type: 'tunnel',\r\n        tunnelType: 'open', //(open|direct|...)\r\n        canFork: true //default - irrelevant for tunnelType === 'open'\r\n    }, {\r\n        type: 'wall',\r\n        wallType: 'none'\r\n    }],\r\n    beastGenerationRules: [{\r\n        type: 'none' //(none|nest|...)\r\n    }],\r\n    isSeen: true\r\n}];\r\n\r\nexport default initRoom;","const beastDictionary = {\r\n  'Cave Spider': {\r\n    baseTitle: 'Cave Spider',\r\n    scarcity: '1d4-1', //each time a room is generated, an amount of this beast is rolled for; higher rolls indicate higher frequency etc.\r\n    healthDie: '1d3+1',\r\n    armorDie: 0,\r\n    savingThrowDie: '1d6',\r\n    strength: '1d4',\r\n    elementalScarcity: '2d6',\r\n    imgSrc: 'https://upload.wikimedia.org/wikipedia/commons/2/28/Araneus_diadematus_%28Spider_underside%29.jpg',\r\n    dyingMessage: 'You squish the spider. Then wish you hadn\\'t.'\r\n  },\r\n  'Cave Rat': {\r\n    baseTitle: 'Cave Rat',\r\n    scarcity: '1d4-2',\r\n    healthDie: '1d2+1',\r\n    armorDie: 0,\r\n    savingThrowDie: 0,\r\n    strength: 2,\r\n    elementalScarcity: '3d6',\r\n    imgSrc: 'https://upload.wikimedia.org/wikipedia/commons/1/1d/Albino_Rat.jpg',\r\n    dyingMessage: 'You squish the rat. Then wish you hadn\\'t.'\r\n  }\r\n}\r\n\r\nexport default beastDictionary;","const toCoords = (index, dimensionality) => ({\r\n    x: index % dimensionality,\r\n    y: Math.floor(index / dimensionality)\r\n});\r\n\r\nconst toIndex = (coords, dimensionality) => coords.y * dimensionality + coords.x;\r\n\r\nexport default toCoords;\r\nexport { toIndex };","const rollDie = (die) => {\r\n  //extend to allow multiple dice to be rolled\r\n  if (die === 0) return 0;\r\n  const hazMod = die.indexOf('+') > -1;\r\n  const n = Number(die.split('')[0]);\r\n  const d = Number(hazMod ? die.split('d')[1].split('+')[0] : die.split('d')[1]);\r\n  const mod = hazMod ? Number(die.split('+')[1]) : 0;\r\n  const getRoll = () => Math.ceil(Math.random() * d);\r\n  const reducedVal = Array.from({length: n}, _ => getRoll())\r\n    .reduce((acc, curr) => acc + curr)\r\n    + mod;\r\n  return reducedVal > 0 ? reducedVal : 0;\r\n}\r\n\r\nexport default rollDie;","import React, { createContext, useContext, useReducer, useMemo } from 'react';\r\nimport initGameState from '../initModels/initGameState';\r\nimport beastDictionary from '../dictionaries/beastDictionary';\r\nimport toCoords, { toIndex } from '../utilityLambdas/toCoords';\r\nimport rollDie from '../utilityLambdas/rollDie';\r\n\r\n/*\r\ntodo: add 'rolling' logic and compare functions for moves\r\n*/\r\n\r\nconst GameStateContext = createContext();\r\n\r\nconst useGameState = () => {\r\n    const ctx = useContext(GameStateContext);\r\n    if (!ctx) {\r\n        throw new Error(`must use within a ContextProvider`);\r\n    }\r\n    return ctx;\r\n}\r\n\r\nconst gameStateReducer = (gameState, action) => {\r\n    const filteredRest = (obj, filterKey) => Object.fromEntries(\r\n        Object.keys(obj)\r\n          .filter(key => !filterKey.test(key))\r\n          .map(key => [key, obj[key]])\r\n        );\r\n    \r\n    const gameRestFromLocation = filteredRest(gameState, /location/);\r\n    \r\n    const handleTargetBeast = (beast) => {\r\n        const targetBeast = beast ? beast : action.targetBeast;\r\n        const locationRest = filteredRest(gameState.location, /(nearbyBeasts|targetState)/);\r\n        const gameRest = filteredRest(addLog({ctx: 'room', value: `Targeting ${targetBeast.baseTitle}.`}), /location/);\r\n        const updatedBeast = Object.assign({}, targetBeast, {isTargeted: true});\r\n        \r\n        return {\r\n            location: {\r\n                targetState: false,\r\n                nearbyBeasts: gameState.location.nearbyBeasts.filter(b => b.key !== targetBeast.key).map(b => Object.assign({}, b, {isTargeted: false})).concat(updatedBeast),\r\n                ...locationRest\r\n            },\r\n            ...gameRest\r\n        }\r\n    }\r\n\r\n    const addLog = (msgs) => {\r\n        //console.log('addMsg', msgs);\r\n        if (!msgs) throw new Error('Must include msgs');\r\n        if (Array.isArray(msgs)) {\r\n            msgs.forEach(msg => {\r\n                if (!msg.ctx) throw new Error(`You must provide context in ${JSON.stringify(msg)}`);\r\n            });\r\n        }\r\n        else if (!msgs.ctx)  throw new Error(`You must provide context in ${JSON.stringify(msgs)}`);\r\n        const gameRest = filteredRest(gameState, /log/);\r\n        const logRest = filteredRest(gameState.log, /messages/);\r\n        \r\n        return {\r\n            log: {\r\n                messages: gameState.log.messages.concat([].concat(msgs)),\r\n                ...logRest\r\n            },\r\n            ...gameRest\r\n        };\r\n    }\r\n    \r\n    const attackFrom = (params) => {\r\n        return {\r\n            \r\n        };\r\n    }\r\n\r\n    switch (action.type) {\r\n        case 'printGameState': {\r\n            console.log('print gameState', gameState);\r\n            return addLog({ctx: 'console', value: 'Printed gameState'});\r\n        }\r\n        case 'addLog': return addLog(action);\r\n\r\n        case 'clearRoom': {\r\n            const gameRest = filteredRest(addLog({ctx: 'console', value: 'Cleared the room.'}), /location/);\r\n            const locationRest = filteredRest(gameState.location, /nearbyBeasts/);\r\n            \r\n            return {\r\n                location: {\r\n                    nearbyBeasts: [],\r\n                    ...locationRest\r\n                },\r\n                ...gameRest\r\n            };\r\n        }\r\n\r\n        case 'pushBeastToRoom': {\r\n            const gameRest = filteredRest(addLog({ctx: 'console', value: `Pushing ${action.beast.baseTitle} to the room.`}), /location/);\r\n            const loc = gameState.location;\r\n            const room = loc.rooms[action.roomIndex];\r\n            const dimensionality = room.dimensionality;\r\n            const locationRest = filteredRest(loc, /(nearbyBeasts)/);\r\n            const openTiles = room.tiles\r\n                .map((tile, i) => tile.type === 'none' ? toCoords(i, dimensionality) : null) //improve - need to check if beast or player is on tile as well\r\n                .filter(t => typeof t === 'object' ? t : false);\r\n            const updatedBeast = Object.assign({}, action.beast, {coords: openTiles[Math.floor(Math.random() * openTiles.length)]}); //extend - allow to check loc.rooms[loc.level - 1].beastGenerationRules\r\n            const nearbyBeasts = loc.nearbyBeasts.filter(b => b.key !== action.beast.key).concat(updatedBeast);\r\n            \r\n            return {\r\n                location: {\r\n                    nearbyBeasts,\r\n                    ...locationRest\r\n                },\r\n                ...gameRest\r\n            };\r\n        }\r\n\r\n        case 'handleClickTile': {\r\n            const loc = gameState.location;\r\n            const dimensionality = loc.rooms[loc.level - 1].dimensionality;\r\n            const beastOnTile = loc.nearbyBeasts.filter(({coords}) => {\r\n                const tileCoords = toCoords(action.index, dimensionality);\r\n                return coords.x === tileCoords.x && coords.y === tileCoords.y;\r\n            });\r\n\r\n            if (beastOnTile.length > 0) return handleTargetBeast(beastOnTile[0]);\r\n            else return addLog({ctx: 'roomHUD', value: JSON.stringify(action.tile)});\r\n        }\r\n\r\n        case 'handleMoveActor': {\r\n            //assume player for first iteration to test handlers\r\n            //const actor = 'player';\r\n            const dir = action.dir;\r\n            const room = gameState.location.rooms[gameState.location.level - 1];\r\n            const dimensionality = room.dimensionality;\r\n            const { x, y } = gameState.player.roomCoords;\r\n            if ((dir === 'up' && y === 1)\r\n                || (dir === 'right' && x === dimensionality - 2) //confirm\r\n                || (dir === 'left' && x === 1)\r\n                || (dir === 'down' && y === dimensionality - 2)\r\n                ) return addLog({ctx: 'room', value: 'You bump into a wall.'});\r\n            const dX = dir === 'left' ? -1 : dir === 'right' ? 1 : 0;\r\n            const dY = dir === 'up' ? -1 : dir === 'down' ? 1 : 0;\r\n            const targetTile = room.tiles[toIndex({x: x + dX, y: y + dY}, dimensionality)];\r\n            if (targetTile.type !== 'none') return addLog({ctx: 'room', value: 'Whups!'});\r\n            const gameRest = filteredRest(gameState, /player/);\r\n            const playerRest = filteredRest(gameState.player, /roomCoords/);\r\n           \r\n            return {\r\n                player: {\r\n                    roomCoords: {\r\n                        x: x + dX,\r\n                        y: y + dY\r\n                    },\r\n                    ...playerRest\r\n                },\r\n                ...gameRest\r\n            };\r\n        }\r\n\r\n        case 'openTargetBeast': {\r\n            const locationRest = filteredRest(gameState.location, /targetState/);\r\n            const targetState = true;\r\n            \r\n            return {\r\n                location: {\r\n                    targetState,\r\n                    ...locationRest\r\n                },\r\n                ...gameRestFromLocation\r\n            };\r\n        }\r\n\r\n        case 'handleTargetBeast': return handleTargetBeast();\r\n\r\n        case 'adjustHP': { //consider modifying to 'adjustStat'\r\n            if (action.targetActor === 'npc') {\r\n                const loc = gameState.location;\r\n                const nearbyBeasts = loc.nearbyBeasts;\r\n                const locationRest = filteredRest(loc, /nearbyBeasts/);\r\n                const beastTarget = nearbyBeasts.filter(b => b.isTargeted)[0]; //extend to allow looping to damage/apply damage to other creatures (or consider one attack per beast in single dispatch call)\r\n                \r\n                const weapon = gameState.player.inventory.filter(item => item.type === 'weapon' && item.isEquipped)[0];\r\n                const amtFromAttack = rollDie(weapon.damage);\r\n                \r\n                const updatedBeast = Object.assign({}, beastTarget, {hp: beastTarget.hp - amtFromAttack});\r\n                const msg = updatedBeast.hp > 0 ? `You attack the ${updatedBeast.baseTitle}.` : beastDictionary[updatedBeast.baseTitle].dyingMessage;\r\n                const rollMsg = `Rolled ${weapon.damage} for ${amtFromAttack} damage.`;\r\n                const gameRest = filteredRest(addLog([{ctx: 'room', value: msg}, {ctx: 'roller', value: rollMsg}]), /(location)/);\r\n                \r\n                return {\r\n                    location: {\r\n                        nearbyBeasts: nearbyBeasts.filter(b => !b.isTargeted).concat(updatedBeast.hp > 0 ? updatedBeast : []),\r\n                        ...locationRest\r\n                    },\r\n                    ...gameRest\r\n                };\r\n            }\r\n            else {\r\n                const gameRest = filteredRest(gameState, /player/);\r\n                const playerRest = filteredRest(gameState.player, /vitalStats/);\r\n                const vitalStatsRest = filteredRest(gameState.player.vitalStats, /hp/);\r\n                \r\n                return {\r\n                    player: {\r\n                        vitalStats: {\r\n                            hp: gameState.player.vitalStats.hp + action.amt,\r\n                            ...vitalStatsRest\r\n                        },\r\n                        ...playerRest\r\n                    },\r\n                    ...gameRest\r\n                }\r\n            }\r\n        }\r\n\r\n        case 'handleToggleInventory': {\r\n            const gameRest = filteredRest(gameState, /focusMode/);\r\n            const focusMode = gameState.focusMode === 'inventory' ? null : 'inventory';\r\n            \r\n            return {\r\n                focusMode,\r\n                ...gameRest\r\n            };\r\n        }\r\n\r\n        case 'handleClosePanel': {\r\n            const gameRest = filteredRest(gameState, /focusMode/);\r\n            \r\n            return {\r\n                focusMode: null,\r\n                ...gameRest\r\n            }\r\n        }\r\n\r\n        case 'toggleConsole': {\r\n            const gameRest = filteredRest(gameState, /focusMode/);\r\n            const focusMode = gameState.focusMode === 'console' ? null : 'console'\r\n            \r\n            return {\r\n                focusMode,\r\n                ...gameRest\r\n            }\r\n        }\r\n\r\n        case 'applyAction': {\r\n            const value = `You ${action.itmAction.type} the ${action.item.baseTitle}${action.target ? ` ${action.target.verb} the ${action.target.baseTitle}` : ''}.`;\r\n            const gameRest = filteredRest(addLog({value}), /player/);\r\n            const playerRest = filteredRest(gameState.player, /inventory/);\r\n            return {\r\n                player: {\r\n                    inventory: action.itmAction.doesRemove ? gameState.player.inventory.filter(item => item.key !== action.item.key) : gameState.player.inventory,\r\n                    ...playerRest\r\n                },\r\n                ...gameRest\r\n            }\r\n        }\r\n\r\n        default: throw new Error(`Must include a valid action.type in action ${JSON.stringify(action)}`);\r\n    }\r\n}\r\n\r\nconst GameStateProvider = (props) => {\r\n    const [gameState, dispatchGameState] = useReducer(gameStateReducer, initGameState);\r\n    const value = useMemo(() => [gameState, dispatchGameState], [gameState])\r\n    return <GameStateContext.Provider value={value} {...props}/>;\r\n}\r\n\r\nexport default GameStateProvider;\r\nexport { useGameState };","import React from 'react';\r\nimport { useGameState } from '../../../../helpers/reducers/gameStateReducer';\r\n\r\nconst PrintBtn = () => {\r\n    const [, dispatchGameState] = useGameState();\r\n    const printGameState = () => dispatchGameState({\r\n        ctx: 'printBtn',\r\n        type: 'printGameState'\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={printGameState}>Print GameState</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PrintBtn;","const elements = {\r\n  fire: {\r\n    scarcity: 0.8,\r\n    healthMod: 1\r\n  },\r\n  water: {\r\n    scarcity: 0.8,\r\n    healthMod: 1\r\n  },\r\n  nether: {\r\n    scarcity: 0.2,\r\n    healthMod: 5\r\n  }\r\n}\r\n\r\nexport default elements;","import rollDie from './rollDie';\r\nimport beastDictionary from '../dictionaries/beastDictionary';\r\nimport elements from '../initModels/elements';\r\n\r\nconst generateNewBeast = (allowedBeasts = ['spider']) => {\r\n  const lvl = 1; //depend on levels allowed for beast (abstract to a function or die roll)\r\n  const lvlMod = lvl - 1; //only allow beasts to mod at >= lvl2\r\n  const beastType = allowedBeasts[Math.floor(Math.random() * allowedBeasts.length)]\r\n  const beastRef = Object.assign({}, beastDictionary[beastType]);\r\n  const elementalScarcity = rollDie(beastRef.elementalScarcity) + lvlMod;\r\n  const floorDCChecks = { //roll DC checks based on Location lvl; think \"roll on table 'y' for 'x' LocationLvl\"\r\n    elements: rollDie('2d4+4')\r\n  };\r\n  beastRef.hp = rollDie(beastRef.healthDie);\r\n  beastRef.key = Math.random() * 100;\r\n  if (elementalScarcity > floorDCChecks.elements) beastRef.elem = 'fire';\r\n  beastRef.hp +=  lvlMod + elements.hasOwnProperty(beastRef.elem) ? elements[beastRef.elem].healthMod : 0;\r\n  return beastRef;\r\n}\r\n\r\nexport default generateNewBeast;","import React, { Fragment, useState } from 'react';\r\nimport generateNewBeast from '../../../../helpers/utilityLambdas/generateNewBeast';\r\nimport beastDictionary from '../../../../helpers/dictionaries/beastDictionary';\r\nimport { useGameState } from '../../../../helpers/reducers/gameStateReducer';\r\nimport './Beasterator.css';\r\n\r\nconst Beasterator = () => {\r\n  const [, dispatchGameState] = useGameState();\r\n  const [beast, setBeast] = useState(null);\r\n  const [selectedBeastList, setBeastList] = useState([]);\r\n  const ctx = 'console';\r\n\r\n  const getNewBeast = () => generateNewBeast(selectedBeastList.length > 0 ? selectedBeastList : Object.keys(beastDictionary))\r\n\r\n  const handleClickNewBeast = () => {\r\n    const newBeast = getNewBeast();\r\n    dispatchGameState({\r\n      ctx,\r\n      type: 'addLog',\r\n      value: `Generated a new ${newBeast.baseTitle}`\r\n    });\r\n    setBeast(newBeast);\r\n  }\r\n\r\n  const handleToggleCheckbox = (b) => {\r\n    const concat = selectedBeastList.indexOf(b) === -1;\r\n    const updatedList = concat ? selectedBeastList.concat(b) : selectedBeastList.filter(s => s !== b);\r\n    setBeastList(updatedList);\r\n  }\r\n\r\n  const handlePushBeast = () => {\r\n    const newBeast = beast ? beast : getNewBeast();\r\n    dispatchGameState({\r\n      ctx,\r\n      type: 'pushBeastToRoom',\r\n      beast: newBeast,\r\n      roomIndex: 0\r\n    });\r\n    setBeast(null);\r\n  }\r\n\r\n  const beastCheckboxes = Object.keys(beastDictionary).map(b => (\r\n    <Fragment key={b}>\r\n      <label>{b}</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        value={selectedBeastList.indexOf() > -1}\r\n        onClick={() => handleToggleCheckbox(b)}\r\n      />\r\n    </Fragment>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"beasterator\">\r\n      <div className=\"console-component-title\">\r\n        <h3>Beasterator</h3>\r\n      </div>\r\n      <div className=\"beasterator-controls\">\r\n        {beastCheckboxes}\r\n      </div>\r\n      <div className=\"btn\">\r\n        <button onClick={handleClickNewBeast}>Generate new beast</button>\r\n        <button onClick={handlePushBeast}>Generate + push to Room</button>\r\n      </div>\r\n      <div className=\"beast-container\">\r\n        {beast &&\r\n          <>\r\n            <button onClick={() => handlePushBeast(beast)}>Push to Room</button>\r\n          </>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Beasterator;","import React, { useState } from 'react';\r\nimport rollDie from '../../../../helpers/utilityLambdas/rollDie';\r\nimport { useGameState } from '../../../../helpers/reducers/gameStateReducer';\r\n\r\nconst standardDice = [\r\n  4,\r\n  6,\r\n  8,\r\n  10,\r\n  12,\r\n  16,\r\n  20\r\n];\r\n\r\nconst Roller = () => {\r\n  const [, dispatchGameState] = useGameState();\r\n  const [dieAmt, setDieAmt] = useState(1);\r\n  const [die, setDie] = useState('d4');\r\n  const [mod, setMod] = useState(0);\r\n  const [rollVal, setRollVal] = useState(0);\r\n\r\n  const handleModifierOnChange = ({target}) => setMod(target.value);\r\n\r\n  const handleDieNumberOnChange = ({target}) => setDieAmt(target.value);\r\n\r\n  const handleDieSelect = (d) => setDie(d);\r\n\r\n  const handleRoll = () => {\r\n    const rollResult = rollDie(rollString);\r\n    dispatchGameState({\r\n      ctx: 'console',\r\n      type: 'addLog',\r\n      value: `Rolling ${rollString}... Result: ${rollResult}`\r\n    });\r\n    setRollVal(rollResult);\r\n  }\r\n\r\n  const diceBtns = standardDice.map(d => {\r\n    const btnDie = `d${d}`;\r\n    return (\r\n      <button\r\n        key={d}\r\n        onClick={() => handleDieSelect(btnDie)}\r\n        className={`btn${btnDie === die ? ' active' : ''}`}\r\n      >\r\n        {btnDie}\r\n      </button>\r\n    );\r\n  });\r\n\r\n  const rollString = `${dieAmt}${die}${mod > 0 ? `+${mod}` : ''}`;\r\n\r\n  return (\r\n    <div className=\"roller\">\r\n      <div className=\"console-component-title\">\r\n        <h3>Roller</h3>\r\n      </div>\r\n      <div className=\"button-die-number\">\r\n        <input onChange={handleDieNumberOnChange} value={dieAmt}/>\r\n      </div>\r\n      <div className=\"button-group-dice\">\r\n        {diceBtns}\r\n      </div>\r\n      <div className=\"modifiers\">\r\n        Set modifier\r\n        <input type=\"number\" onChange={handleModifierOnChange} value={mod}/>\r\n      </div>\r\n      <button onClick={handleRoll} msg={`[Roller]: Rolled ${rollString}`}>Roll die</button>\r\n      {rollVal && (\r\n        <div className=\"roll-value\">\r\n          Rolling {rollString}... {rollVal}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Roller;","import React from 'react';\r\nimport { useGameState } from '../../../../helpers/reducers/gameStateReducer';\r\n\r\nconst Locationator = () => {\r\n    const [gameState, dispatchGameState] = useGameState();\r\n\r\n    const ctx = 'locationator';\r\n\r\n    const handleClearRoom = () => {\r\n        dispatchGameState({\r\n            ctx,\r\n            type: 'clearRoom'\r\n        });\r\n    }\r\n\r\n    const handleClearBattle = () => {\r\n        dispatchGameState({\r\n            ctx,\r\n            type: 'clearBattle'\r\n        });\r\n    }\r\n\r\n    const {location} = gameState;\r\n    const {nearbyBeasts} = location;\r\n    return (\r\n        <div className=\"locationator\">\r\n            {nearbyBeasts.length > 0 && (\r\n                <button onClick={handleClearRoom}>\r\n                    Clear Room\r\n                </button>\r\n            )}\r\n            {nearbyBeasts.filter(b => b.isInBattle).length > 0 && (\r\n                <button onClick={handleClearBattle}>\r\n                    Clear Battle\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Locationator;","import React from 'react';\r\nimport { useGameState } from '../../../helpers/reducers/gameStateReducer';\r\nimport PrintBtn from './PrintBtn';\r\nimport Beasterator from './Beasterator'\r\nimport Roller from './Roller';\r\nimport Locationator from './Locationator';\r\nimport './Console.css';\r\n\r\nconst Console = () => {\r\n    const [gameState] = useGameState();\r\n    \r\n    const isActive = gameState.focusMode === 'console';\r\n    return (\r\n        <div className={`console${isActive ? ' active' : ''}`}>\r\n            <PrintBtn/>\r\n            <Beasterator/>\r\n            <Roller/>\r\n            <Locationator/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Console;","import React from 'react';\r\nimport avatar from '../../../media/img/rl_avatar.svg';\r\nimport './PlayerAvatar.css';\r\n\r\nconst PlayerAvatar = () => {\r\n    return (\r\n        <div className=\"player-display-avatar\">\r\n            <img src={avatar} alt=\"player avatar\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerAvatar;","import React from 'react';\r\nimport { useGameState } from '../../../helpers/reducers/gameStateReducer';\r\nimport './PlayerStats.css';\r\n\r\nconst PlayerStats = () => {\r\n    const [gameState] = useGameState();\r\n\r\n    const playerStats = gameState.player.vitalStats;\r\n    return (\r\n        <div className=\"player-display-stats\">\r\n            <div className=\"player-display-inner\">\r\n                {Object.keys(playerStats).map(s => <div key={s}>{s}: {playerStats[s]}</div>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerStats;","import React from 'react';\r\nimport PlayerAvatar from '../../atoms/PlayerAvatar';\r\nimport PlayerStats from '../../molecules/PlayerStats';\r\nimport './PlayerDisplay.css';\r\n\r\nconst PlayerDisplay = () => {\r\n    return (\r\n        <div className=\"player-display\">\r\n            <PlayerAvatar/>\r\n            <PlayerStats/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerDisplay;","import React from 'react';\r\nimport './Loading.css';\r\n\r\nconst Loading = () => {\r\n    return (\r\n        <div className=\"loading\">\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","import React, { useState, useMemo } from 'react';\r\nimport { useGameState } from '../../../helpers/reducers/gameStateReducer';\r\nimport Loading from '../../atoms/Loading';\r\nimport './Log.css';\r\n\r\nconst Log = () => {\r\n    const [gameState] = useGameState();\r\n    const [ctxFocus, setCtxFocus] = useState('general');\r\n    const [activeViewIndex, setActiveViewIndex] = useState(0);\r\n    \r\n    const displayTypes = useMemo(() => {\r\n        return gameState.log.messages\r\n            .map(({ctx}) => ctx)\r\n            .reduce((acc, curr) => {\r\n                if (acc.indexOf(curr) > -1) return acc;\r\n                else return acc.concat(',').concat(curr);\r\n            })\r\n            .split(',');\r\n        }, [gameState.log.messages]);\r\n\r\n    const handleFilterClick = (t) => {\r\n        setActiveViewIndex(0);\r\n        setCtxFocus(t);\r\n    }\r\n\r\n    const messages = gameState.log.messages;\r\n    const filteredMessages = ctxFocus === 'general' ? messages : messages.filter(({ctx}) => ctx === ctxFocus);\r\n    const VIEW_LIMIT = 11; //arbitrary - draw by element.getClientBoundingRect()\r\n\r\n    const adjustViewIndex = (amt) => {\r\n        if (activeViewIndex + amt < 0 || activeViewIndex + amt > filteredMessages.length - 1) return;\r\n        setActiveViewIndex(amt ? activeViewIndex + amt : 0);\r\n    }\r\n    \r\n    const endIndex = filteredMessages.length - activeViewIndex;\r\n    const begIndex = endIndex >= VIEW_LIMIT ?\r\n        endIndex - VIEW_LIMIT\r\n        : 0;\r\n    const logMessages = filteredMessages\r\n        .slice(begIndex, endIndex)\r\n        .map((m, i) => (\r\n            <div key={m.value.concat(i)}>\r\n                <span>{m.value}</span>\r\n            </div>\r\n        ));\r\n    const filterButtons = displayTypes ? displayTypes.map(t => (\r\n        <button className={`filter-btn${ctxFocus === t ? ' active' : ''}`} key={t} onClick={() => handleFilterClick(t)}>\r\n            <span>{t}</span>\r\n        </button>\r\n    )) : (\r\n        <Loading/>\r\n    );\r\n\r\n    return (\r\n        <div className=\"log\">\r\n            <div className=\"log-body\">\r\n                <div className=\"log-body-inner-container\">\r\n                    {logMessages}\r\n                </div>\r\n                <div className=\"log-body-view-index-btns\">\r\n                    <div className=\"view-index-btns-container\">\r\n                        <button className={`view-index-btn${(filteredMessages.length === 0 || activeViewIndex === filteredMessages.length - 1) ? ' disabled' : ''}`} onClick={() => adjustViewIndex(1)}>↑</button>\r\n                        <button className={`view-index-btn${activeViewIndex === 0 ? ' disabled' : ''}`} onClick={() => adjustViewIndex(-1)}>↓</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"log-filter-btns\">\r\n                {filterButtons}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Log;","import React from 'react';\r\nimport PlayerDisplay from '..//PlayerDisplay';\r\nimport Log from '../../molecules/Log';\r\nimport './HUD.css';\r\n\r\nconst HUD = () => {\r\n    return (\r\n        <div className=\"heads-up-display\">\r\n            <PlayerDisplay/>\r\n            <Log/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HUD;","const canDrop = {\r\n    type: 'drop',\r\n    doesRemove: true\r\n};\r\n\r\nconst canThrow = {\r\n    type: 'throw',\r\n    doesRemove: true\r\n};\r\n\r\nconst itemDictionary = {\r\n    weapon: {\r\n        allowedActions: [\r\n            {\r\n                type: 'attack',\r\n                doesRemove: false\r\n            },\r\n            {...canThrow},\r\n            {...canDrop}\r\n        ]\r\n    },\r\n    potion: {\r\n        allowedActions: [\r\n            {\r\n                type: 'quaff',\r\n                doesRemove: true\r\n            },\r\n            {...canDrop}\r\n        ]\r\n    }\r\n};\r\n\r\nexport default itemDictionary;","import React, { useState } from 'react';\r\nimport { useGameState } from '../../../helpers/reducers/gameStateReducer';\r\nimport itemDictionary from '../../../helpers/dictionaries/itemDictionary';\r\nimport './InventoryControls.css';\r\n\r\nconst InventoryControls = () => {\r\n    const [gameState, dispatchGameState] = useGameState();\r\n    const [focusItem, setFocusItem] = useState();\r\n\r\n    const handleUseItem = (itmAction) => dispatchGameState({\r\n        ctx: 'inventory',\r\n        type: 'applyAction',\r\n        item: focusItem,\r\n        itmAction\r\n    });\r\n\r\n    const inventory = gameState.player.inventory.map((item, i) => (\r\n        <div key={item.baseTitle.concat(i)} className=\"inventory-item\" onClick={() => setFocusItem(item)}>\r\n            {item.baseTitle}\r\n        </div>\r\n    ));\r\n    const isInIventory = focusItem && focusItem.hasOwnProperty('key') && gameState.player.inventory.filter(item => item.key === focusItem.key).length > 0;\r\n    \r\n    return (\r\n        <div className=\"inventory-controls\">\r\n            {inventory}\r\n            {isInIventory && (\r\n                <div className=\"focus-item-container\">\r\n                    <h5>Use {focusItem.baseTitle}</h5>\r\n                    <div className=\"focus-item-action-list\">\r\n                        {itemDictionary[focusItem.type].allowedActions.map(a => (\r\n                            <button key={a.type} onClick={() => handleUseItem(a)}>{a.type}</button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InventoryControls;","import React from 'react';\r\nimport { useGameState } from '../../../helpers/reducers/gameStateReducer';\r\nimport './PlayerBattleControls.css';\r\n\r\nconst PlayerBattleControls = () => {\r\n    const [gameState, dispatchGameState] = useGameState();\r\n\r\n    const targetedBeast = gameState.location.nearbyBeasts.filter(b => b.isTargeted);\r\n\r\n    const handleTarget = () => dispatchGameState({ //confirm if this is still necessary\r\n        type: 'openTargetBeast',\r\n        ctx: 'playerControls'\r\n    });\r\n\r\n    const handleAttack = (attack) => dispatchGameState({\r\n        type: 'adjustHP',\r\n        ctx: 'playerControls',\r\n        targetActor: 'npc',\r\n        attack\r\n    });\r\n\r\n    return (\r\n        <div className=\"player-controls\">\r\n            {targetedBeast.length === 0 ? (\r\n                <button onClick={handleTarget}>Target</button>\r\n            ) : (\r\n                <button onClick={handleAttack}>Attack</button>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerBattleControls;","import React from 'react'\r\nimport { useGameState } from '../../../helpers/reducers/gameStateReducer';\r\nimport InventoryControls from '../../molecules/InventoryControls';\r\nimport PlayerBattleControls from '../../molecules/PlayerBattleControls';\r\nimport './ControlsPanel.css';\r\n\r\nconst ControlsPanel = () => {\r\n    const [gameState] = useGameState();\r\n\r\n    const targetedBeasts = gameState.location.nearbyBeasts.filter(b => b.isTargeted);\r\n    return (\r\n        <div className={`controls-panel${targetedBeasts.length > 0 || gameState.focusMode === 'inventory' ? ' active': ''}`}>\r\n            {targetedBeasts.length > 0 && <PlayerBattleControls/>}\r\n            {gameState.focusMode === 'inventory' && <InventoryControls/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ControlsPanel;","import React from 'react';\r\nimport { useGameState } from '../../../helpers/reducers/gameStateReducer';\r\nimport './ActionHUD.css';\r\n\r\nconst ActionHUD = () => {\r\n    const [gameState] = useGameState();\r\n\r\n    const roomStats = gameState.location.nearbyBeasts.length;\r\n    const roomHUD = gameState.log.messages.filter(m => m.ctx === 'roomHUD');\r\n    const roomHUDTip = roomHUD ? roomHUD[roomHUD.length - 1] : null;\r\n    return (\r\n        <div className=\"action-heads-up-display\">\r\n            <div>Beasts in room: {roomStats}</div>\r\n            <div>{roomHUDTip && roomHUDTip.value}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActionHUD;","import React from 'react';\r\nimport { useGameState } from '../../../helpers/reducers/gameStateReducer';\r\nimport './Beast.css';\r\n\r\nconst BeastHealthBar = ({currHealth, maxHealth}) => {\r\n  const width = `${currHealth / maxHealth * 100}%`;\r\n  const barStyle = {\r\n    width\r\n  };\r\n  return (\r\n    <div className=\"health-bar\">\r\n      <span style={barStyle}></span>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst BeastBattleControls = () => {\r\n  const [, dispatchGameState] = useGameState();\r\n  \r\n  const adjustHP = (amt = -1) => dispatchGameState({\r\n    type: 'adjustHP',\r\n    ctx: 'battlepod',\r\n    targetActor: 'player',\r\n    amt\r\n  });\r\n  return (\r\n    <div className=\"beast-display-actions\">\r\n      <button onClick={() => adjustHP(-1)}>Attack</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BeastBattleControls;\r\nexport { BeastHealthBar };","import React, { useEffect } from 'react';\r\nimport { useGameState } from '../../../helpers/reducers/gameStateReducer';\r\nimport toCoords from '../../../helpers/utilityLambdas/toCoords';\r\nimport { BeastHealthBar } from '../Beast';\r\nimport './Room.css';\r\n\r\nconst Room = () => {\r\n    const [gameState, dispatchGameState] = useGameState();\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', (e) => {\r\n            if (e.isComposing || e.keyCode === 229) return;\r\n            if (arrowHandlerKeyCodes.indexOf(e.keyCode) > -1) handleArrowPress(e.keyCode);\r\n            if (e.keyCode === 73) handleToggleInventory();\r\n            if (e.keyCode === 27) handleToggleInventory(true);\r\n            if (e.keyCode === 67) handleToggleConsole();\r\n        });\r\n    }, []);\r\n\r\n    const ctx = 'room';\r\n\r\n    const arrowHandlerKeyCodes = [\r\n        37,\r\n        38,\r\n        39,\r\n        40\r\n    ];\r\n\r\n    const handleArrowPress = (kCode) => {\r\n        const dirFromCode = () => {\r\n            switch (kCode) {\r\n                case 37: return 'left';\r\n                case 38: return 'up';\r\n                case 39: return 'right';\r\n                case 40: return 'down';\r\n                default: {\r\n                    throw new Error(`Invalid keyCode supplied ${JSON.stringify(kCode)}`);\r\n                }\r\n            }\r\n        };\r\n        dispatchGameState({\r\n            ctx,\r\n            type: 'handleMoveActor',\r\n            dir: dirFromCode()\r\n        });\r\n    }\r\n\r\n    const handleToggleConsole = () => dispatchGameState({\r\n        ctx,\r\n        type: 'toggleConsole'\r\n    })\r\n\r\n    const handleToggleInventory = (forceClose) => dispatchGameState({\r\n        ctx,\r\n        type: forceClose ? 'handleClosePanel' : 'handleToggleInventory'\r\n    });\r\n\r\n    const handleClickTile = (tile, index) => dispatchGameState({\r\n        ctx,\r\n        type: 'handleClickTile',\r\n        tile,\r\n        index\r\n    });\r\n\r\n    const tiles = gameState.location.rooms[0].tiles;\r\n    const dimensionality = gameState.location.rooms[0].dimensionality;\r\n\r\n    const roomCoords = tiles.map((tile, i) => {\r\n        const tileCoords = toCoords(i, dimensionality); //improve - need to access roomIndex\r\n        const beast = gameState.location.nearbyBeasts.filter(b => b.coords.x === tileCoords.x && b.coords.y === tileCoords.y)[0];\r\n        const { x, y } = tileCoords;\r\n        const gridAreaStyle = {\r\n            gridColumn: `${x} / ${x + 1}`,\r\n            gridRow: `${y} / ${y + 1}`\r\n        };\r\n        const player = gameState.player.roomCoords.x === x && gameState.player.roomCoords.y === y;\r\n        return (\r\n            <div key={`${x}_${y}`} className={`map-tile ${tile.type}`} onClick={() => handleClickTile(tile, i)}>\r\n                {beast && (\r\n                    <div className={`beast ${beast.baseTitle.replace(/\\s/g, '-').toLowerCase()}${beast.isTargeted ? ' is-targeted' : ''}`} style={gridAreaStyle}>\r\n                        <BeastHealthBar currHealth={beast.hp} maxHealth={4}/>\r\n                    </div>\r\n                )}\r\n                {player && (\r\n                    <div className={`player`} style={gridAreaStyle}></div>\r\n                )}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const gridUnit = '1.5em'; //update - calculate: (get container width) => set font-size on container and use em to size gridUnit\r\n\r\n    const gridStyle = {\r\n        gridTemplateColumns: `repeat(${dimensionality}, ${gridUnit})`,\r\n        gridTemplateRows: `repeat(${dimensionality}, ${gridUnit})`\r\n    };\r\n\r\n    return (\r\n        <div className=\"room\" style={gridStyle}>\r\n            {roomCoords}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Room;","import React from 'react';\r\nimport { useGameState } from '../../../helpers/reducers/gameStateReducer';\r\nimport Room from '../../molecules/Room';\r\nimport './ActionDisplay.css';\r\n\r\nconst ActionDisplay = () => {\r\n    const [gameState] = useGameState();\r\n\r\n    const roomData = gameState.location.rooms ? gameState.location.rooms.filter(r => r.id === gameState.player.levelCoords.roomId)[0] : null;\r\n    return (\r\n        <div className=\"action-display\">\r\n            {roomData && <Room {...roomData}/>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ActionDisplay;","import React from 'react';\r\nimport ActionHUD from '../ActionHUD';\r\nimport ActionDisplay from '../ActionDisplay';\r\nimport './GameDisplay.css';\r\nimport { useGameState } from '../../../helpers/reducers/gameStateReducer';\r\n\r\nconst GameDisplay = () => {\r\n    const [gameState] = useGameState();\r\n\r\n    const targetedBeasts = gameState.location.nearbyBeasts.filter(b => b.isTargeted);\r\n    const withPanel = targetedBeasts.length > 0 || gameState.focusMode === 'inventory';\r\n    return (\r\n        <div className={`game-display${withPanel ? ' with-control-panel' : ''}`}>\r\n            <ActionDisplay/>\r\n            <ActionHUD/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameDisplay;","import React from 'react';\r\nimport GameStateProvider from '../../../helpers/reducers/gameStateReducer';\r\nimport Console from '../Console';\r\nimport HUD from '../HUD';\r\nimport ControlsPanel from '../ControlsPanel';\r\nimport GameDisplay from '../GameDisplay';\r\nimport './Game.css';\r\n\r\nconst Game = () => {\r\n    return (\r\n        <GameStateProvider>\r\n            <Console/>\r\n            <div className=\"game\">\r\n                <HUD/>\r\n                <ControlsPanel/>\r\n                <GameDisplay/>\r\n            </div>\r\n        </GameStateProvider>\r\n    );\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport Game from './components/containers/Game';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}